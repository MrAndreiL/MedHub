@page "/deleteinvoiceitem/{Id}"
@using MedHub.UI.Pages.Models;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2>Delete InvoiceItem</h2>
@if (invoiceitem != null)
{
    <p>Are you sure you want to delete this invoice item ?</p>
}
<div class="row">
        <table class="table table-light">
        <tr>
            <td>Quantity</td>
            <td>@invoiceitem.Quantity</td>
        </tr>
        <tr>
            <td>Unit Price</td>
            <td>@invoiceitem.UnitPrice</td>
        </tr>
    </table>
</div>
<br />
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@Delete" value="Delete" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string Id { get; set; }
    InvoiceItemViewModel invoiceitem = new InvoiceItemViewModel();
    protected override async Task OnInitializedAsync()
    {
        invoiceitem = await Http.GetFromJsonAsync<InvoiceItemViewModel>("https://localhost:7260/api/v1/InvoiceItems/" + Id);
    }
    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("https://localhost:7260/api/v1/InvoiceItems/" + Id);

        if (response.IsSuccessStatusCode)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("invoiceitemlist");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("invoiceitemlist");
    }
}