Ä
MD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\ConfigureServices.cs
	namespace 	
MedHub
 
. 
Infrastructure 
{		 
public

 

static

 
class

 
ConfigureServices

 )
{ 
public 
static 
IServiceCollection (%
AddInfrastructureServices) B
(B C
thisC G
IServiceCollectionH Z
services[ c
,c d
IConfiguratione s
configuration	t Å
)
Å Ç
{ 	
services 
. 
	AddScoped 
( 
typeof %
(% &
IRepository& 1
<1 2
>2 3
)3 4
,4 5
typeof6 <
(< =

Repository= G
<G H
>H I
)I J
)J K
;K L
services 
. 
AddDbContext !
<! "
MedHubContext" /
>/ 0
(0 1
options1 8
=>9 ;
options 
. 
	UseSqlite 
( 
configuration $
.$ %
GetConnectionString% 8
(8 9
$str9 C
)C D
)D E
. $
UseQueryTrackingBehavior %
(% &!
QueryTrackingBehavior& ;
.; <

NoTracking< F
)F G
,G H
ServiceLifetime 
. 
	Singleton %
)% &
;& '
return 
services 
; 
} 	
} 
} µ
ND:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Data\MedHubContext.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Data  $
{ 
public 

class 
MedHubContext 
:  
	DbContext! *
{ 
public 
DbSet 
< 
Allergen 
> 
	Allergens (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public		 
DbSet		 
<		 
Appointment		  
>		  !
Appointments		" .
{		/ 0
get		1 4
;		4 5
set		6 9
;		9 :
}		; <
public

 
DbSet

 
<

 
Cabinet

 
>

 
Cabinets

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
DbSet 
< 
Doctor 
> 
Doctors $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
Drug 
> 
Drugs  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
Invoice 
> 
Invoices &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
InvoiceItem  
>  !
InvoiceItems" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
MedicalRecord "
>" #
MedicalRecords$ 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
DbSet 
< 
MedicalSpeciality &
>& '
MedicalSpecialities( ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
DbSet 
< 
Patient 
> 
Patients &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
Service 
> 
Services &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
	StockItem 
> 

StockItems  *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
MedHubContext 
( 
DbContextOptions -
<- .
MedHubContext. ;
>; <
options= D
)D E
:F G
baseH L
(L M
optionsM T
)T U
{V W
}X Y
} 
} Ùˆ
cD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Migrations\20221219012143_InitialCreate.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  

Migrations  *
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
CNP 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
type/ 3
:3 4
$str5 ;
,; <
nullable= E
:E F
falseG L
)L M
,M N
	FirstName 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; A
,A B
nullableC K
:K L
falseM R
)R S
,S T
LastName   
=   
table   $
.  $ %
Column  % +
<  + ,
string  , 2
>  2 3
(  3 4
type  4 8
:  8 9
$str  : @
,  @ A
nullable  B J
:  J K
false  L Q
)  Q R
,  R S
Email!! 
=!! 
table!! !
.!!! "
Column!!" (
<!!( )
string!!) /
>!!/ 0
(!!0 1
type!!1 5
:!!5 6
$str!!7 =
,!!= >
nullable!!? G
:!!G H
false!!I N
)!!N O
,!!O P
PhoneNumber"" 
=""  !
table""" '
.""' (
Column""( .
<"". /
string""/ 5
>""5 6
(""6 7
type""7 ;
:""; <
$str""= C
,""C D
nullable""E M
:""M N
false""O T
)""T U
}## 
,## 
constraints$$ 
:$$ 
table$$ "
=>$$# %
{%% 
table&& 
.&& 

PrimaryKey&& $
(&&$ %
$str&&% 1
,&&1 2
x&&3 4
=>&&5 7
x&&8 9
.&&9 :
Id&&: <
)&&< =
;&&= >
}'' 
)'' 
;'' 
migrationBuilder)) 
.)) 
CreateTable)) (
())( )
name** 
:** 
$str** +
,**+ ,
columns++ 
:++ 
table++ 
=>++ !
new++" %
{,, 
Id-- 
=-- 
table-- 
.-- 
Column-- %
<--% &
Guid--& *
>--* +
(--+ ,
type--, 0
:--0 1
$str--2 8
,--8 9
nullable--: B
:--B C
false--D I
)--I J
,--J K
Name.. 
=.. 
table..  
...  !
Column..! '
<..' (
string..( .
>... /
(../ 0
type..0 4
:..4 5
$str..6 <
,..< =
nullable..> F
:..F G
false..H M
)..M N
}// 
,// 
constraints00 
:00 
table00 "
=>00# %
{11 
table22 
.22 

PrimaryKey22 $
(22$ %
$str22% =
,22= >
x22? @
=>22A C
x22D E
.22E F
Id22F H
)22H I
;22I J
}33 
)33 
;33 
migrationBuilder55 
.55 
CreateTable55 (
(55( )
name66 
:66 
$str66  
,66  !
columns77 
:77 
table77 
=>77 !
new77" %
{88 
Id99 
=99 
table99 
.99 
Column99 %
<99% &
Guid99& *
>99* +
(99+ ,
type99, 0
:990 1
$str992 8
,998 9
nullable99: B
:99B C
false99D I
)99I J
,99J K
CNP:: 
=:: 
table:: 
.::  
Column::  &
<::& '
string::' -
>::- .
(::. /
type::/ 3
:::3 4
$str::5 ;
,::; <
nullable::= E
:::E F
false::G L
)::L M
,::M N
	FirstName;; 
=;; 
table;;  %
.;;% &
Column;;& ,
<;;, -
string;;- 3
>;;3 4
(;;4 5
type;;5 9
:;;9 :
$str;;; A
,;;A B
nullable;;C K
:;;K L
false;;M R
);;R S
,;;S T
LastName<< 
=<< 
table<< $
.<<$ %
Column<<% +
<<<+ ,
string<<, 2
><<2 3
(<<3 4
type<<4 8
:<<8 9
$str<<: @
,<<@ A
nullable<<B J
:<<J K
false<<L Q
)<<Q R
,<<R S
Email== 
=== 
table== !
.==! "
Column==" (
<==( )
string==) /
>==/ 0
(==0 1
type==1 5
:==5 6
$str==7 =
,=== >
nullable==? G
:==G H
false==I N
)==N O
,==O P
PhoneNumber>> 
=>>  !
table>>" '
.>>' (
Column>>( .
<>>. /
string>>/ 5
>>>5 6
(>>6 7
type>>7 ;
:>>; <
$str>>= C
,>>C D
nullable>>E M
:>>M N
false>>O T
)>>T U
}?? 
,?? 
constraints@@ 
:@@ 
table@@ "
=>@@# %
{AA 
tableBB 
.BB 

PrimaryKeyBB $
(BB$ %
$strBB% 2
,BB2 3
xBB4 5
=>BB6 8
xBB9 :
.BB: ;
IdBB; =
)BB= >
;BB> ?
}CC 
)CC 
;CC 
migrationBuilderEE 
.EE 
CreateTableEE (
(EE( )
nameFF 
:FF 
$strFF  
,FF  !
columnsGG 
:GG 
tableGG 
=>GG !
newGG" %
{HH 
IdII 
=II 
tableII 
.II 
ColumnII %
<II% &
GuidII& *
>II* +
(II+ ,
typeII, 0
:II0 1
$strII2 8
,II8 9
nullableII: B
:IIB C
falseIID I
)III J
,IIJ K
NameJJ 
=JJ 
tableJJ  
.JJ  !
ColumnJJ! '
<JJ' (
stringJJ( .
>JJ. /
(JJ/ 0
typeJJ0 4
:JJ4 5
$strJJ6 <
,JJ< =
nullableJJ> F
:JJF G
falseJJH M
)JJM N
,JJN O
DescriptionKK 
=KK  !
tableKK" '
.KK' (
ColumnKK( .
<KK. /
stringKK/ 5
>KK5 6
(KK6 7
typeKK7 ;
:KK; <
$strKK= C
,KKC D
nullableKKE M
:KKM N
trueKKO S
)KKS T
,KKT U
PriceLL 
=LL 
tableLL !
.LL! "
ColumnLL" (
<LL( )
decimalLL) 0
>LL0 1
(LL1 2
typeLL2 6
:LL6 7
$strLL8 >
,LL> ?
nullableLL@ H
:LLH I
falseLLJ O
)LLO P
,LLP Q
DiscriminatorMM !
=MM" #
tableMM$ )
.MM) *
ColumnMM* 0
<MM0 1
stringMM1 7
>MM7 8
(MM8 9
typeMM9 =
:MM= >
$strMM? E
,MME F
nullableMMG O
:MMO P
falseMMQ V
)MMV W
}NN 
,NN 
constraintsOO 
:OO 
tableOO "
=>OO# %
{PP 
tableQQ 
.QQ 

PrimaryKeyQQ $
(QQ$ %
$strQQ% 2
,QQ2 3
xQQ4 5
=>QQ6 8
xQQ9 :
.QQ: ;
IdQQ; =
)QQ= >
;QQ> ?
}RR 
)RR 
;RR 
migrationBuilderTT 
.TT 
CreateTableTT (
(TT( )
nameUU 
:UU 
$strUU  
,UU  !
columnsVV 
:VV 
tableVV 
=>VV !
newVV" %
{WW 
IdXX 
=XX 
tableXX 
.XX 
ColumnXX %
<XX% &
GuidXX& *
>XX* +
(XX+ ,
typeXX, 0
:XX0 1
$strXX2 8
,XX8 9
nullableXX: B
:XXB C
falseXXD I
)XXI J
,XXJ K
AddressYY 
=YY 
tableYY #
.YY# $
ColumnYY$ *
<YY* +
stringYY+ 1
>YY1 2
(YY2 3
typeYY3 7
:YY7 8
$strYY9 ?
,YY? @
nullableYYA I
:YYI J
falseYYK P
)YYP Q
,YYQ R
PhoneNumberZZ 
=ZZ  !
tableZZ" '
.ZZ' (
ColumnZZ( .
<ZZ. /
stringZZ/ 5
>ZZ5 6
(ZZ6 7
typeZZ7 ;
:ZZ; <
$strZZ= C
,ZZC D
nullableZZE M
:ZZM N
falseZZO T
)ZZT U
,ZZU V
SpecialityId[[  
=[[! "
table[[# (
.[[( )
Column[[) /
<[[/ 0
Guid[[0 4
>[[4 5
([[5 6
type[[6 :
:[[: ;
$str[[< B
,[[B C
nullable[[D L
:[[L M
false[[N S
)[[S T
}\\ 
,\\ 
constraints]] 
:]] 
table]] "
=>]]# %
{^^ 
table__ 
.__ 

PrimaryKey__ $
(__$ %
$str__% 2
,__2 3
x__4 5
=>__6 8
x__9 :
.__: ;
Id__; =
)__= >
;__> ?
table`` 
.`` 

ForeignKey`` $
(``$ %
nameaa 
:aa 
$straa L
,aaL M
columnbb 
:bb 
xbb  !
=>bb" $
xbb% &
.bb& '
SpecialityIdbb' 3
,bb3 4
principalTablecc &
:cc& '
$strcc( =
,cc= >
principalColumndd '
:dd' (
$strdd) -
,dd- .
onDeleteee  
:ee  !
ReferentialActionee" 3
.ee3 4
Cascadeee4 ;
)ee; <
;ee< =
}ff 
)ff 
;ff 
migrationBuilderhh 
.hh 
CreateTablehh (
(hh( )
nameii 
:ii 
$strii /
,ii/ 0
columnsjj 
:jj 
tablejj 
=>jj !
newjj" %
{kk 
	DoctorsIdll 
=ll 
tablell  %
.ll% &
Columnll& ,
<ll, -
Guidll- 1
>ll1 2
(ll2 3
typell3 7
:ll7 8
$strll9 ?
,ll? @
nullablellA I
:llI J
falsellK P
)llP Q
,llQ R
SpecializationsIdmm %
=mm& '
tablemm( -
.mm- .
Columnmm. 4
<mm4 5
Guidmm5 9
>mm9 :
(mm: ;
typemm; ?
:mm? @
$strmmA G
,mmG H
nullablemmI Q
:mmQ R
falsemmS X
)mmX Y
}nn 
,nn 
constraintsoo 
:oo 
tableoo "
=>oo# %
{pp 
tableqq 
.qq 

PrimaryKeyqq $
(qq$ %
$strqq% A
,qqA B
xqqC D
=>qqE G
newqqH K
{qqL M
xqqN O
.qqO P
	DoctorsIdqqP Y
,qqY Z
xqq[ \
.qq\ ]
SpecializationsIdqq] n
}qqo p
)qqp q
;qqq r
tablerr 
.rr 

ForeignKeyrr $
(rr$ %
namess 
:ss 
$strss L
,ssL M
columntt 
:tt 
xtt  !
=>tt" $
xtt% &
.tt& '
	DoctorsIdtt' 0
,tt0 1
principalTableuu &
:uu& '
$struu( 1
,uu1 2
principalColumnvv '
:vv' (
$strvv) -
,vv- .
onDeleteww  
:ww  !
ReferentialActionww" 3
.ww3 4
Cascadeww4 ;
)ww; <
;ww< =
tablexx 
.xx 

ForeignKeyxx $
(xx$ %
nameyy 
:yy 
$stryy `
,yy` a
columnzz 
:zz 
xzz  !
=>zz" $
xzz% &
.zz& '
SpecializationsIdzz' 8
,zz8 9
principalTable{{ &
:{{& '
$str{{( =
,{{= >
principalColumn|| '
:||' (
$str||) -
,||- .
onDelete}}  
:}}  !
ReferentialAction}}" 3
.}}3 4
Cascade}}4 ;
)}}; <
;}}< =
}~~ 
)~~ 
;~~ 
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateTable
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
columns
ÇÇ 
:
ÇÇ 
table
ÇÇ 
=>
ÇÇ !
new
ÇÇ" %
{
ÉÉ  
AffectedPatientsId
ÑÑ &
=
ÑÑ' (
table
ÑÑ) .
.
ÑÑ. /
Column
ÑÑ/ 5
<
ÑÑ5 6
Guid
ÑÑ6 :
>
ÑÑ: ;
(
ÑÑ; <
type
ÑÑ< @
:
ÑÑ@ A
$str
ÑÑB H
,
ÑÑH I
nullable
ÑÑJ R
:
ÑÑR S
false
ÑÑT Y
)
ÑÑY Z
,
ÑÑZ [
AllergiesId
ÖÖ 
=
ÖÖ  !
table
ÖÖ" '
.
ÖÖ' (
Column
ÖÖ( .
<
ÖÖ. /
Guid
ÖÖ/ 3
>
ÖÖ3 4
(
ÖÖ4 5
type
ÖÖ5 9
:
ÖÖ9 :
$str
ÖÖ; A
,
ÖÖA B
nullable
ÖÖC K
:
ÖÖK L
false
ÖÖM R
)
ÖÖR S
}
ÜÜ 
,
ÜÜ 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
àà 
table
ââ 
.
ââ 

PrimaryKey
ââ $
(
ââ$ %
$str
ââ% 9
,
ââ9 :
x
ââ; <
=>
ââ= ?
new
ââ@ C
{
ââD E
x
ââF G
.
ââG H 
AffectedPatientsId
ââH Z
,
ââZ [
x
ââ\ ]
.
ââ] ^
AllergiesId
ââ^ i
}
ââj k
)
ââk l
;
ââl m
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
ãã 
:
ãã 
$str
ãã H
,
ããH I
column
åå 
:
åå 
x
åå  !
=>
åå" $
x
åå% &
.
åå& '
AllergiesId
åå' 2
,
åå2 3
principalTable
çç &
:
çç& '
$str
çç( 3
,
çç3 4
principalColumn
éé '
:
éé' (
$str
éé) -
,
éé- .
onDelete
èè  
:
èè  !
ReferentialAction
èè" 3
.
èè3 4
Cascade
èè4 ;
)
èè; <
;
èè< =
table
êê 
.
êê 

ForeignKey
êê $
(
êê$ %
name
ëë 
:
ëë 
$str
ëë N
,
ëëN O
column
íí 
:
íí 
x
íí  !
=>
íí" $
x
íí% &
.
íí& ' 
AffectedPatientsId
íí' 9
,
íí9 :
principalTable
ìì &
:
ìì& '
$str
ìì( 2
,
ìì2 3
principalColumn
îî '
:
îî' (
$str
îî) -
,
îî- .
onDelete
ïï  
:
ïï  !
ReferentialAction
ïï" 3
.
ïï3 4
Cascade
ïï4 ;
)
ïï; <
;
ïï< =
}
ññ 
)
ññ 
;
ññ 
migrationBuilder
òò 
.
òò 
CreateTable
òò (
(
òò( )
name
ôô 
:
ôô 
$str
ôô &
,
ôô& '
columns
öö 
:
öö 
table
öö 
=>
öö !
new
öö" %
{
õõ 
Id
úú 
=
úú 
table
úú 
.
úú 
Column
úú %
<
úú% &
Guid
úú& *
>
úú* +
(
úú+ ,
type
úú, 0
:
úú0 1
$str
úú2 8
,
úú8 9
nullable
úú: B
:
úúB C
false
úúD I
)
úúI J
,
úúJ K
	PatientId
ùù 
=
ùù 
table
ùù  %
.
ùù% &
Column
ùù& ,
<
ùù, -
Guid
ùù- 1
>
ùù1 2
(
ùù2 3
type
ùù3 7
:
ùù7 8
$str
ùù9 ?
,
ùù? @
nullable
ùùA I
:
ùùI J
false
ùùK P
)
ùùP Q
,
ùùQ R
DoctorId
ûû 
=
ûû 
table
ûû $
.
ûû$ %
Column
ûû% +
<
ûû+ ,
Guid
ûû, 0
>
ûû0 1
(
ûû1 2
type
ûû2 6
:
ûû6 7
$str
ûû8 >
,
ûû> ?
nullable
ûû@ H
:
ûûH I
false
ûûJ O
)
ûûO P
,
ûûP Q
MedicalNote
üü 
=
üü  !
table
üü" '
.
üü' (
Column
üü( .
<
üü. /
string
üü/ 5
>
üü5 6
(
üü6 7
type
üü7 ;
:
üü; <
$str
üü= C
,
üüC D
nullable
üüE M
:
üüM N
false
üüO T
)
üüT U
,
üüU V
RegistrationDate
†† $
=
††% &
table
††' ,
.
††, -
Column
††- 3
<
††3 4
DateTime
††4 <
>
††< =
(
††= >
type
††> B
:
††B C
$str
††D J
,
††J K
nullable
††L T
:
††T U
false
††V [
)
††[ \
}
°° 
,
°° 
constraints
¢¢ 
:
¢¢ 
table
¢¢ "
=>
¢¢# %
{
££ 
table
§§ 
.
§§ 

PrimaryKey
§§ $
(
§§$ %
$str
§§% 8
,
§§8 9
x
§§: ;
=>
§§< >
x
§§? @
.
§§@ A
Id
§§A C
)
§§C D
;
§§D E
table
•• 
.
•• 

ForeignKey
•• $
(
••$ %
name
¶¶ 
:
¶¶ 
$str
¶¶ B
,
¶¶B C
column
ßß 
:
ßß 
x
ßß  !
=>
ßß" $
x
ßß% &
.
ßß& '
DoctorId
ßß' /
,
ßß/ 0
principalTable
®® &
:
®®& '
$str
®®( 1
,
®®1 2
principalColumn
©© '
:
©©' (
$str
©©) -
,
©©- .
onDelete
™™  
:
™™  !
ReferentialAction
™™" 3
.
™™3 4
Cascade
™™4 ;
)
™™; <
;
™™< =
table
´´ 
.
´´ 

ForeignKey
´´ $
(
´´$ %
name
¨¨ 
:
¨¨ 
$str
¨¨ D
,
¨¨D E
column
≠≠ 
:
≠≠ 
x
≠≠  !
=>
≠≠" $
x
≠≠% &
.
≠≠& '
	PatientId
≠≠' 0
,
≠≠0 1
principalTable
ÆÆ &
:
ÆÆ& '
$str
ÆÆ( 2
,
ÆÆ2 3
principalColumn
ØØ '
:
ØØ' (
$str
ØØ) -
,
ØØ- .
onDelete
∞∞  
:
∞∞  !
ReferentialAction
∞∞" 3
.
∞∞3 4
Cascade
∞∞4 ;
)
∞∞; <
;
∞∞< =
}
±± 
)
±± 
;
±± 
migrationBuilder
≥≥ 
.
≥≥ 
CreateTable
≥≥ (
(
≥≥( )
name
¥¥ 
:
¥¥ 
$str
¥¥ $
,
¥¥$ %
columns
µµ 
:
µµ 
table
µµ 
=>
µµ !
new
µµ" %
{
∂∂ 
AllergensId
∑∑ 
=
∑∑  !
table
∑∑" '
.
∑∑' (
Column
∑∑( .
<
∑∑. /
Guid
∑∑/ 3
>
∑∑3 4
(
∑∑4 5
type
∑∑5 9
:
∑∑9 :
$str
∑∑; A
,
∑∑A B
nullable
∑∑C K
:
∑∑K L
false
∑∑M R
)
∑∑R S
,
∑∑S T
InfestedDrugsId
∏∏ #
=
∏∏$ %
table
∏∏& +
.
∏∏+ ,
Column
∏∏, 2
<
∏∏2 3
Guid
∏∏3 7
>
∏∏7 8
(
∏∏8 9
type
∏∏9 =
:
∏∏= >
$str
∏∏? E
,
∏∏E F
nullable
∏∏G O
:
∏∏O P
false
∏∏Q V
)
∏∏V W
}
ππ 
,
ππ 
constraints
∫∫ 
:
∫∫ 
table
∫∫ "
=>
∫∫# %
{
ªª 
table
ºº 
.
ºº 

PrimaryKey
ºº $
(
ºº$ %
$str
ºº% 6
,
ºº6 7
x
ºº8 9
=>
ºº: <
new
ºº= @
{
ººA B
x
ººC D
.
ººD E
AllergensId
ººE P
,
ººP Q
x
ººR S
.
ººS T
InfestedDrugsId
ººT c
}
ººd e
)
ººe f
;
ººf g
table
ΩΩ 
.
ΩΩ 

ForeignKey
ΩΩ $
(
ΩΩ$ %
name
ææ 
:
ææ 
$str
ææ E
,
ææE F
column
øø 
:
øø 
x
øø  !
=>
øø" $
x
øø% &
.
øø& '
AllergensId
øø' 2
,
øø2 3
principalTable
¿¿ &
:
¿¿& '
$str
¿¿( 3
,
¿¿3 4
principalColumn
¡¡ '
:
¡¡' (
$str
¡¡) -
,
¡¡- .
onDelete
¬¬  
:
¬¬  !
ReferentialAction
¬¬" 3
.
¬¬3 4
Cascade
¬¬4 ;
)
¬¬; <
;
¬¬< =
table
√√ 
.
√√ 

ForeignKey
√√ $
(
√√$ %
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ H
,
ƒƒH I
column
≈≈ 
:
≈≈ 
x
≈≈  !
=>
≈≈" $
x
≈≈% &
.
≈≈& '
InfestedDrugsId
≈≈' 6
,
≈≈6 7
principalTable
∆∆ &
:
∆∆& '
$str
∆∆( 2
,
∆∆2 3
principalColumn
«« '
:
««' (
$str
««) -
,
««- .
onDelete
»»  
:
»»  !
ReferentialAction
»»" 3
.
»»3 4
Cascade
»»4 ;
)
»»; <
;
»»< =
}
…… 
)
…… 
;
…… 
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateTable
ÀÀ (
(
ÀÀ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ $
,
ÃÃ$ %
columns
ÕÕ 
:
ÕÕ 
table
ÕÕ 
=>
ÕÕ !
new
ÕÕ" %
{
ŒŒ 
Id
œœ 
=
œœ 
table
œœ 
.
œœ 
Column
œœ %
<
œœ% &
Guid
œœ& *
>
œœ* +
(
œœ+ ,
type
œœ, 0
:
œœ0 1
$str
œœ2 8
,
œœ8 9
nullable
œœ: B
:
œœB C
false
œœD I
)
œœI J
,
œœJ K
	CabinetId
–– 
=
–– 
table
––  %
.
––% &
Column
––& ,
<
––, -
Guid
––- 1
>
––1 2
(
––2 3
type
––3 7
:
––7 8
$str
––9 ?
,
––? @
nullable
––A I
:
––I J
false
––K P
)
––P Q
,
––Q R
	PatientId
—— 
=
—— 
table
——  %
.
——% &
Column
——& ,
<
——, -
Guid
——- 1
>
——1 2
(
——2 3
type
——3 7
:
——7 8
$str
——9 ?
,
——? @
nullable
——A I
:
——I J
false
——K P
)
——P Q
,
——Q R
DoctorId
““ 
=
““ 
table
““ $
.
““$ %
Column
““% +
<
““+ ,
Guid
““, 0
>
““0 1
(
““1 2
type
““2 6
:
““6 7
$str
““8 >
,
““> ?
nullable
““@ H
:
““H I
false
““J O
)
““O P
,
““P Q
	StartTime
”” 
=
”” 
table
””  %
.
””% &
Column
””& ,
<
””, -
DateTime
””- 5
>
””5 6
(
””6 7
type
””7 ;
:
””; <
$str
””= C
,
””C D
nullable
””E M
:
””M N
false
””O T
)
””T U
,
””U V
EndTime
‘‘ 
=
‘‘ 
table
‘‘ #
.
‘‘# $
Column
‘‘$ *
<
‘‘* +
DateTime
‘‘+ 3
>
‘‘3 4
(
‘‘4 5
type
‘‘5 9
:
‘‘9 :
$str
‘‘; A
,
‘‘A B
nullable
‘‘C K
:
‘‘K L
false
‘‘M R
)
‘‘R S
,
‘‘S T
Comment
’’ 
=
’’ 
table
’’ #
.
’’# $
Column
’’$ *
<
’’* +
string
’’+ 1
>
’’1 2
(
’’2 3
type
’’3 7
:
’’7 8
$str
’’9 ?
,
’’? @
nullable
’’A I
:
’’I J
true
’’K O
)
’’O P
}
÷÷ 
,
÷÷ 
constraints
◊◊ 
:
◊◊ 
table
◊◊ "
=>
◊◊# %
{
ÿÿ 
table
ŸŸ 
.
ŸŸ 

PrimaryKey
ŸŸ $
(
ŸŸ$ %
$str
ŸŸ% 6
,
ŸŸ6 7
x
ŸŸ8 9
=>
ŸŸ: <
x
ŸŸ= >
.
ŸŸ> ?
Id
ŸŸ? A
)
ŸŸA B
;
ŸŸB C
table
⁄⁄ 
.
⁄⁄ 

ForeignKey
⁄⁄ $
(
⁄⁄$ %
name
€€ 
:
€€ 
$str
€€ B
,
€€B C
column
‹‹ 
:
‹‹ 
x
‹‹  !
=>
‹‹" $
x
‹‹% &
.
‹‹& '
	CabinetId
‹‹' 0
,
‹‹0 1
principalTable
›› &
:
››& '
$str
››( 2
,
››2 3
principalColumn
ﬁﬁ '
:
ﬁﬁ' (
$str
ﬁﬁ) -
,
ﬁﬁ- .
onDelete
ﬂﬂ  
:
ﬂﬂ  !
ReferentialAction
ﬂﬂ" 3
.
ﬂﬂ3 4
Cascade
ﬂﬂ4 ;
)
ﬂﬂ; <
;
ﬂﬂ< =
table
‡‡ 
.
‡‡ 

ForeignKey
‡‡ $
(
‡‡$ %
name
·· 
:
·· 
$str
·· @
,
··@ A
column
‚‚ 
:
‚‚ 
x
‚‚  !
=>
‚‚" $
x
‚‚% &
.
‚‚& '
DoctorId
‚‚' /
,
‚‚/ 0
principalTable
„„ &
:
„„& '
$str
„„( 1
,
„„1 2
principalColumn
‰‰ '
:
‰‰' (
$str
‰‰) -
,
‰‰- .
onDelete
ÂÂ  
:
ÂÂ  !
ReferentialAction
ÂÂ" 3
.
ÂÂ3 4
Cascade
ÂÂ4 ;
)
ÂÂ; <
;
ÂÂ< =
table
ÊÊ 
.
ÊÊ 

ForeignKey
ÊÊ $
(
ÊÊ$ %
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ B
,
ÁÁB C
column
ËË 
:
ËË 
x
ËË  !
=>
ËË" $
x
ËË% &
.
ËË& '
	PatientId
ËË' 0
,
ËË0 1
principalTable
ÈÈ &
:
ÈÈ& '
$str
ÈÈ( 2
,
ÈÈ2 3
principalColumn
ÍÍ '
:
ÍÍ' (
$str
ÍÍ) -
,
ÍÍ- .
onDelete
ÎÎ  
:
ÎÎ  !
ReferentialAction
ÎÎ" 3
.
ÎÎ3 4
Cascade
ÎÎ4 ;
)
ÎÎ; <
;
ÎÎ< =
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
migrationBuilder
ÓÓ 
.
ÓÓ 
CreateTable
ÓÓ (
(
ÓÓ( )
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ %
,
ÔÔ% &
columns
 
:
 
table
 
=>
 !
new
" %
{
ÒÒ 

CabinetsId
ÚÚ 
=
ÚÚ  
table
ÚÚ! &
.
ÚÚ& '
Column
ÚÚ' -
<
ÚÚ- .
Guid
ÚÚ. 2
>
ÚÚ2 3
(
ÚÚ3 4
type
ÚÚ4 8
:
ÚÚ8 9
$str
ÚÚ: @
,
ÚÚ@ A
nullable
ÚÚB J
:
ÚÚJ K
false
ÚÚL Q
)
ÚÚQ R
,
ÚÚR S
	DoctorsId
ÛÛ 
=
ÛÛ 
table
ÛÛ  %
.
ÛÛ% &
Column
ÛÛ& ,
<
ÛÛ, -
Guid
ÛÛ- 1
>
ÛÛ1 2
(
ÛÛ2 3
type
ÛÛ3 7
:
ÛÛ7 8
$str
ÛÛ9 ?
,
ÛÛ? @
nullable
ÛÛA I
:
ÛÛI J
false
ÛÛK P
)
ÛÛP Q
}
ÙÙ 
,
ÙÙ 
constraints
ıı 
:
ıı 
table
ıı "
=>
ıı# %
{
ˆˆ 
table
˜˜ 
.
˜˜ 

PrimaryKey
˜˜ $
(
˜˜$ %
$str
˜˜% 7
,
˜˜7 8
x
˜˜9 :
=>
˜˜; =
new
˜˜> A
{
˜˜B C
x
˜˜D E
.
˜˜E F

CabinetsId
˜˜F P
,
˜˜P Q
x
˜˜R S
.
˜˜S T
	DoctorsId
˜˜T ]
}
˜˜^ _
)
˜˜_ `
;
˜˜` a
table
¯¯ 
.
¯¯ 

ForeignKey
¯¯ $
(
¯¯$ %
name
˘˘ 
:
˘˘ 
$str
˘˘ D
,
˘˘D E
column
˙˙ 
:
˙˙ 
x
˙˙  !
=>
˙˙" $
x
˙˙% &
.
˙˙& '

CabinetsId
˙˙' 1
,
˙˙1 2
principalTable
˚˚ &
:
˚˚& '
$str
˚˚( 2
,
˚˚2 3
principalColumn
¸¸ '
:
¸¸' (
$str
¸¸) -
,
¸¸- .
onDelete
˝˝  
:
˝˝  !
ReferentialAction
˝˝" 3
.
˝˝3 4
Cascade
˝˝4 ;
)
˝˝; <
;
˝˝< =
table
˛˛ 
.
˛˛ 

ForeignKey
˛˛ $
(
˛˛$ %
name
ˇˇ 
:
ˇˇ 
$str
ˇˇ B
,
ˇˇB C
column
ÄÄ 
:
ÄÄ 
x
ÄÄ  !
=>
ÄÄ" $
x
ÄÄ% &
.
ÄÄ& '
	DoctorsId
ÄÄ' 0
,
ÄÄ0 1
principalTable
ÅÅ &
:
ÅÅ& '
$str
ÅÅ( 1
,
ÅÅ1 2
principalColumn
ÇÇ '
:
ÇÇ' (
$str
ÇÇ) -
,
ÇÇ- .
onDelete
ÉÉ  
:
ÉÉ  !
ReferentialAction
ÉÉ" 3
.
ÉÉ3 4
Cascade
ÉÉ4 ;
)
ÉÉ; <
;
ÉÉ< =
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
migrationBuilder
ÜÜ 
.
ÜÜ 
CreateTable
ÜÜ (
(
ÜÜ( )
name
áá 
:
áá 
$str
áá  
,
áá  !
columns
àà 
:
àà 
table
àà 
=>
àà !
new
àà" %
{
ââ 
Id
ää 
=
ää 
table
ää 
.
ää 
Column
ää %
<
ää% &
Guid
ää& *
>
ää* +
(
ää+ ,
type
ää, 0
:
ää0 1
$str
ää2 8
,
ää8 9
nullable
ää: B
:
ääB C
false
ääD I
)
ääI J
,
ääJ K
SellerId
ãã 
=
ãã 
table
ãã $
.
ãã$ %
Column
ãã% +
<
ãã+ ,
Guid
ãã, 0
>
ãã0 1
(
ãã1 2
type
ãã2 6
:
ãã6 7
$str
ãã8 >
,
ãã> ?
nullable
ãã@ H
:
ããH I
false
ããJ O
)
ããO P
,
ããP Q
BuyerId
åå 
=
åå 
table
åå #
.
åå# $
Column
åå$ *
<
åå* +
Guid
åå+ /
>
åå/ 0
(
åå0 1
type
åå1 5
:
åå5 6
$str
åå7 =
,
åå= >
nullable
åå? G
:
ååG H
false
ååI N
)
ååN O
,
ååO P

IssuedDate
çç 
=
çç  
table
çç! &
.
çç& '
Column
çç' -
<
çç- .
DateTime
çç. 6
>
çç6 7
(
çç7 8
type
çç8 <
:
çç< =
$str
çç> D
,
ççD E
nullable
ççF N
:
ççN O
false
ççP U
)
ççU V
}
éé 
,
éé 
constraints
èè 
:
èè 
table
èè "
=>
èè# %
{
êê 
table
ëë 
.
ëë 

PrimaryKey
ëë $
(
ëë$ %
$str
ëë% 2
,
ëë2 3
x
ëë4 5
=>
ëë6 8
x
ëë9 :
.
ëë: ;
Id
ëë; =
)
ëë= >
;
ëë> ?
table
íí 
.
íí 

ForeignKey
íí $
(
íí$ %
name
ìì 
:
ìì 
$str
ìì =
,
ìì= >
column
îî 
:
îî 
x
îî  !
=>
îî" $
x
îî% &
.
îî& '
SellerId
îî' /
,
îî/ 0
principalTable
ïï &
:
ïï& '
$str
ïï( 2
,
ïï2 3
principalColumn
ññ '
:
ññ' (
$str
ññ) -
,
ññ- .
onDelete
óó  
:
óó  !
ReferentialAction
óó" 3
.
óó3 4
Cascade
óó4 ;
)
óó; <
;
óó< =
table
òò 
.
òò 

ForeignKey
òò $
(
òò$ %
name
ôô 
:
ôô 
$str
ôô <
,
ôô< =
column
öö 
:
öö 
x
öö  !
=>
öö" $
x
öö% &
.
öö& '
BuyerId
öö' .
,
öö. /
principalTable
õõ &
:
õõ& '
$str
õõ( 2
,
õõ2 3
principalColumn
úú '
:
úú' (
$str
úú) -
,
úú- .
onDelete
ùù  
:
ùù  !
ReferentialAction
ùù" 3
.
ùù3 4
Cascade
ùù4 ;
)
ùù; <
;
ùù< =
}
ûû 
)
ûû 
;
ûû 
migrationBuilder
†† 
.
†† 
CreateTable
†† (
(
††( )
name
°° 
:
°° 
$str
°°  
,
°°  !
columns
¢¢ 
:
¢¢ 
table
¢¢ 
=>
¢¢ !
new
¢¢" %
{
££ 
Id
§§ 
=
§§ 
table
§§ 
.
§§ 
Column
§§ %
<
§§% &
Guid
§§& *
>
§§* +
(
§§+ ,
type
§§, 0
:
§§0 1
$str
§§2 8
,
§§8 9
nullable
§§: B
:
§§B C
false
§§D I
)
§§I J
,
§§J K
	ProductId
•• 
=
•• 
table
••  %
.
••% &
Column
••& ,
<
••, -
Guid
••- 1
>
••1 2
(
••2 3
type
••3 7
:
••7 8
$str
••9 ?
,
••? @
nullable
••A I
:
••I J
false
••K P
)
••P Q
,
••Q R
Quantity
¶¶ 
=
¶¶ 
table
¶¶ $
.
¶¶$ %
Column
¶¶% +
<
¶¶+ ,
int
¶¶, /
>
¶¶/ 0
(
¶¶0 1
type
¶¶1 5
:
¶¶5 6
$str
¶¶7 @
,
¶¶@ A
nullable
¶¶B J
:
¶¶J K
false
¶¶L Q
)
¶¶Q R
,
¶¶R S
Discriminator
ßß !
=
ßß" #
table
ßß$ )
.
ßß) *
Column
ßß* 0
<
ßß0 1
string
ßß1 7
>
ßß7 8
(
ßß8 9
type
ßß9 =
:
ßß= >
$str
ßß? E
,
ßßE F
nullable
ßßG O
:
ßßO P
false
ßßQ V
)
ßßV W
,
ßßW X
	UnitPrice
®® 
=
®® 
table
®®  %
.
®®% &
Column
®®& ,
<
®®, -
decimal
®®- 4
>
®®4 5
(
®®5 6
type
®®6 :
:
®®: ;
$str
®®< B
,
®®B C
nullable
®®D L
:
®®L M
true
®®N R
)
®®R S
,
®®S T
	InvoiceId
©© 
=
©© 
table
©©  %
.
©©% &
Column
©©& ,
<
©©, -
Guid
©©- 1
>
©©1 2
(
©©2 3
type
©©3 7
:
©©7 8
$str
©©9 ?
,
©©? @
nullable
©©A I
:
©©I J
true
©©K O
)
©©O P
,
©©P Q
	CabinetId
™™ 
=
™™ 
table
™™  %
.
™™% &
Column
™™& ,
<
™™, -
Guid
™™- 1
>
™™1 2
(
™™2 3
type
™™3 7
:
™™7 8
$str
™™9 ?
,
™™? @
nullable
™™A I
:
™™I J
true
™™K O
)
™™O P
}
´´ 
,
´´ 
constraints
¨¨ 
:
¨¨ 
table
¨¨ "
=>
¨¨# %
{
≠≠ 
table
ÆÆ 
.
ÆÆ 

PrimaryKey
ÆÆ $
(
ÆÆ$ %
$str
ÆÆ% 2
,
ÆÆ2 3
x
ÆÆ4 5
=>
ÆÆ6 8
x
ÆÆ9 :
.
ÆÆ: ;
Id
ÆÆ; =
)
ÆÆ= >
;
ÆÆ> ?
table
ØØ 
.
ØØ 

ForeignKey
ØØ $
(
ØØ$ %
name
∞∞ 
:
∞∞ 
$str
∞∞ >
,
∞∞> ?
column
±± 
:
±± 
x
±±  !
=>
±±" $
x
±±% &
.
±±& '
	CabinetId
±±' 0
,
±±0 1
principalTable
≤≤ &
:
≤≤& '
$str
≤≤( 2
,
≤≤2 3
principalColumn
≥≥ '
:
≥≥' (
$str
≥≥) -
,
≥≥- .
onDelete
¥¥  
:
¥¥  !
ReferentialAction
¥¥" 3
.
¥¥3 4
Cascade
¥¥4 ;
)
¥¥; <
;
¥¥< =
table
µµ 
.
µµ 

ForeignKey
µµ $
(
µµ$ %
name
∂∂ 
:
∂∂ 
$str
∂∂ >
,
∂∂> ?
column
∑∑ 
:
∑∑ 
x
∑∑  !
=>
∑∑" $
x
∑∑% &
.
∑∑& '
	InvoiceId
∑∑' 0
,
∑∑0 1
principalTable
∏∏ &
:
∏∏& '
$str
∏∏( 2
,
∏∏2 3
principalColumn
ππ '
:
ππ' (
$str
ππ) -
,
ππ- .
onDelete
∫∫  
:
∫∫  !
ReferentialAction
∫∫" 3
.
∫∫3 4
Cascade
∫∫4 ;
)
∫∫; <
;
∫∫< =
table
ªª 
.
ªª 

ForeignKey
ªª $
(
ªª$ %
name
ºº 
:
ºº 
$str
ºº >
,
ºº> ?
column
ΩΩ 
:
ΩΩ 
x
ΩΩ  !
=>
ΩΩ" $
x
ΩΩ% &
.
ΩΩ& '
	ProductId
ΩΩ' 0
,
ΩΩ0 1
principalTable
ææ &
:
ææ& '
$str
ææ( 2
,
ææ2 3
principalColumn
øø '
:
øø' (
$str
øø) -
,
øø- .
onDelete
¿¿  
:
¿¿  !
ReferentialAction
¿¿" 3
.
¿¿3 4
Cascade
¿¿4 ;
)
¿¿; <
;
¿¿< =
}
¡¡ 
)
¡¡ 
;
¡¡ 
migrationBuilder
√√ 
.
√√ 
CreateIndex
√√ (
(
√√( )
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ 7
,
ƒƒ7 8
table
≈≈ 
:
≈≈ 
$str
≈≈ %
,
≈≈% &
column
∆∆ 
:
∆∆ 
$str
∆∆ )
)
∆∆) *
;
∆∆* +
migrationBuilder
»» 
.
»» 
CreateIndex
»» (
(
»»( )
name
…… 
:
…… 
$str
…… 6
,
……6 7
table
   
:
   
$str
   (
,
  ( )
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ %
)
ÀÀ% &
;
ÀÀ& '
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateIndex
ÕÕ (
(
ÕÕ( )
name
ŒŒ 
:
ŒŒ 
$str
ŒŒ 1
,
ŒŒ1 2
table
œœ 
:
œœ 
$str
œœ %
,
œœ% &
column
–– 
:
–– 
$str
–– #
)
––# $
;
––$ %
migrationBuilder
““ 
.
““ 
CreateIndex
““ (
(
““( )
name
”” 
:
”” 
$str
”” 0
,
””0 1
table
‘‘ 
:
‘‘ 
$str
‘‘ %
,
‘‘% &
column
’’ 
:
’’ 
$str
’’ "
)
’’" #
;
’’# $
migrationBuilder
◊◊ 
.
◊◊ 
CreateIndex
◊◊ (
(
◊◊( )
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ 1
,
ÿÿ1 2
table
ŸŸ 
:
ŸŸ 
$str
ŸŸ %
,
ŸŸ% &
column
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ #
)
⁄⁄# $
;
⁄⁄$ %
migrationBuilder
‹‹ 
.
‹‹ 
CreateIndex
‹‹ (
(
‹‹( )
name
›› 
:
›› 
$str
›› 2
,
››2 3
table
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ &
,
ﬁﬁ& '
column
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ #
)
ﬂﬂ# $
;
ﬂﬂ$ %
migrationBuilder
·· 
.
·· 
CreateIndex
·· (
(
··( )
name
‚‚ 
:
‚‚ 
$str
‚‚ 0
,
‚‚0 1
table
„„ 
:
„„ 
$str
„„ !
,
„„! "
column
‰‰ 
:
‰‰ 
$str
‰‰ &
)
‰‰& '
;
‰‰' (
migrationBuilder
ÊÊ 
.
ÊÊ 
CreateIndex
ÊÊ (
(
ÊÊ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ D
,
ÁÁD E
table
ËË 
:
ËË 
$str
ËË 0
,
ËË0 1
column
ÈÈ 
:
ÈÈ 
$str
ÈÈ +
)
ÈÈ+ ,
;
ÈÈ, -
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateIndex
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ +
,
ÏÏ+ ,
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ !
,
ÌÌ! "
column
ÓÓ 
:
ÓÓ 
$str
ÓÓ !
)
ÓÓ! "
;
ÓÓ" #
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ ,
,
ÒÒ, -
table
ÚÚ 
:
ÚÚ 
$str
ÚÚ !
,
ÚÚ! "
column
ÛÛ 
:
ÛÛ 
$str
ÛÛ "
)
ÛÛ" #
;
ÛÛ# $
migrationBuilder
ıı 
.
ıı 
CreateIndex
ıı (
(
ıı( )
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ -
,
ˆˆ- .
table
˜˜ 
:
˜˜ 
$str
˜˜ !
,
˜˜! "
column
¯¯ 
:
¯¯ 
$str
¯¯ #
)
¯¯# $
;
¯¯$ %
migrationBuilder
˙˙ 
.
˙˙ 
CreateIndex
˙˙ (
(
˙˙( )
name
˚˚ 
:
˚˚ 
$str
˚˚ -
,
˚˚- .
table
¸¸ 
:
¸¸ 
$str
¸¸ !
,
¸¸! "
column
˝˝ 
:
˝˝ 
$str
˝˝ #
)
˝˝# $
;
˝˝$ %
migrationBuilder
ˇˇ 
.
ˇˇ 
CreateIndex
ˇˇ (
(
ˇˇ( )
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ -
,
ÄÄ- .
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ !
,
ÅÅ! "
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateIndex
ÑÑ (
(
ÑÑ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ 2
,
ÖÖ2 3
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ '
,
ÜÜ' (
column
áá 
:
áá 
$str
áá "
)
áá" #
;
áá# $
migrationBuilder
ââ 
.
ââ 
CreateIndex
ââ (
(
ââ( )
name
ää 
:
ää 
$str
ää 3
,
ää3 4
table
ãã 
:
ãã 
$str
ãã '
,
ãã' (
column
åå 
:
åå 
$str
åå #
)
åå# $
;
åå$ %
}
çç 	
	protected
êê 
override
êê 
void
êê 
Down
êê  $
(
êê$ %
MigrationBuilder
êê% 5
migrationBuilder
êê6 F
)
êêF G
{
ëë 	
migrationBuilder
íí 
.
íí 
	DropTable
íí &
(
íí& '
name
ìì 
:
ìì 
$str
ìì $
)
ìì$ %
;
ìì% &
migrationBuilder
ïï 
.
ïï 
	DropTable
ïï &
(
ïï& '
name
ññ 
:
ññ 
$str
ññ '
)
ññ' (
;
ññ( )
migrationBuilder
òò 
.
òò 
	DropTable
òò &
(
òò& '
name
ôô 
:
ôô 
$str
ôô $
)
ôô$ %
;
ôô% &
migrationBuilder
õõ 
.
õõ 
	DropTable
õõ &
(
õõ& '
name
úú 
:
úú 
$str
úú %
)
úú% &
;
úú& '
migrationBuilder
ûû 
.
ûû 
	DropTable
ûû &
(
ûû& '
name
üü 
:
üü 
$str
üü /
)
üü/ 0
;
üü0 1
migrationBuilder
°° 
.
°° 
	DropTable
°° &
(
°°& '
name
¢¢ 
:
¢¢ 
$str
¢¢  
)
¢¢  !
;
¢¢! "
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
•• 
:
•• 
$str
•• &
)
••& '
;
••' (
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
®® 
:
®® 
$str
®® !
)
®®! "
;
®®" #
migrationBuilder
™™ 
.
™™ 
	DropTable
™™ &
(
™™& '
name
´´ 
:
´´ 
$str
´´  
)
´´  !
;
´´! "
migrationBuilder
≠≠ 
.
≠≠ 
	DropTable
≠≠ &
(
≠≠& '
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ  
)
ÆÆ  !
;
ÆÆ! "
migrationBuilder
∞∞ 
.
∞∞ 
	DropTable
∞∞ &
(
∞∞& '
name
±± 
:
±± 
$str
±± 
)
±±  
;
±±  !
migrationBuilder
≥≥ 
.
≥≥ 
	DropTable
≥≥ &
(
≥≥& '
name
¥¥ 
:
¥¥ 
$str
¥¥  
)
¥¥  !
;
¥¥! "
migrationBuilder
∂∂ 
.
∂∂ 
	DropTable
∂∂ &
(
∂∂& '
name
∑∑ 
:
∑∑ 
$str
∑∑  
)
∑∑  !
;
∑∑! "
migrationBuilder
ππ 
.
ππ 
	DropTable
ππ &
(
ππ& '
name
∫∫ 
:
∫∫ 
$str
∫∫ +
)
∫∫+ ,
;
∫∫, -
}
ªª 	
}
ºº 
}ΩΩ ®
[D:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\AllergenRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
AllergenRepository #
:$ %

Repository& 0
<0 1
Allergen1 9
>9 :
{ 
public		 
AllergenRepository		 !
(		! "
MedHubContext		" /
context		0 7
)		7 8
:		9 :
base		; ?
(		? @
context		@ G
)		G H
{

 	
}


 
} 
} ¥
^D:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\AppointmentRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class !
AppointmentRepository &
:' (

Repository) 3
<3 4
Appointment4 ?
>? @
{ 
public		 !
AppointmentRepository		 $
(		$ %
MedHubContext		% 2
context		3 :
)		: ;
:		< =
base		> B
(		B C
context		C J
)		J K
{

 	
}


 
} 
} Ï
XD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\Base\Repository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
., -
Base- 1
{ 
public 

class 

Repository 
< 
T 
> 
:  
IRepository! ,
<, -
T- .
>. /
where0 5
T6 7
:8 9
class: ?
{		 
	protected

 
readonly

 
MedHubContext

 (
medHubContext

) 6
;

6 7
public 

Repository 
( 
MedHubContext '
medHubContext( 5
)5 6
{ 	
this 
. 
medHubContext 
=  
medHubContext! .
;. /
} 	
public 
async 
Task 
< 
T 
> 
AddAsync %
(% &
T& '
entity( .
). /
{ 	
await 
medHubContext 
.  
Set  #
<# $
T$ %
>% &
(& '
)' (
.( )
AddAsync) 1
(1 2
entity2 8
)8 9
;9 :
return 
entity 
; 
} 	
public 
async 
Task 
< 
T 
? 
> 
	FindFirst '
(' (

Expression( 2
<2 3
Func3 7
<7 8
T8 9
,9 :
bool; ?
>? @
>@ A
	predicateB K
)K L
{ 	
return 
await 
medHubContext &
.& '
Set' *
<* +
T+ ,
>, -
(- .
). /
./ 0
AsQueryable0 ;
(; <
)< =
.= >
Where> C
(C D
	predicateD M
)M N
.N O
FirstOrDefaultAsyncO b
(b c
)c d
;d e
} 	
public 
async 
Task 
< 
IReadOnlyCollection -
<- .
T. /
>/ 0
>0 1
GetAllAsync2 =
(= >
)> ?
{ 	
return 
await 
medHubContext &
.& '
Set' *
<* +
T+ ,
>, -
(- .
). /
./ 0
ToListAsync0 ;
(; <
)< =
;= >
} 	
public!! 
T!! 
Update!! 
(!! 
T!! 
entity!!  
)!!  !
{"" 	
medHubContext## 
.## 
Set## 
<## 
T## 
>##  
(##  !
)##! "
.##" #
Update### )
(##) *
entity##* 0
)##0 1
;##1 2
return$$ 
entity$$ 
;$$ 
}%% 	
public'' 
T'' 
Delete'' 
('' 
T'' 
entity''  
)''  !
{(( 	
medHubContext)) 
.)) 
Set)) 
<)) 
T)) 
>))  
())  !
)))! "
.))" #
Remove))# )
())) *
entity))* 0
)))0 1
;))1 2
return** 
entity** 
;** 
}++ 	
public-- 
async-- 
Task-- 
SaveChangesAsync-- *
(--* +
)--+ ,
{.. 	
await// 
medHubContext// 
.//  
SaveChangesAsync//  0
(//0 1
)//1 2
;//2 3
}00 	
}11 
}22 §
ZD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\CabinetRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
CabinetRepository "
:# $

Repository% /
</ 0
Cabinet0 7
>7 8
{ 
public		 
CabinetRepository		  
(		  !
MedHubContext		! .
context		/ 6
)		6 7
:		8 9
base		: >
(		> ?
context		? F
)		F G
{

 	
}


 
} 
} †
YD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\DoctorRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
DoctorRepository !
:" #

Repository$ .
<. /
Doctor/ 5
>5 6
{ 
public		 
DoctorRepository		 
(		  
MedHubContext		  -
context		. 5
)		5 6
:		7 8
base		9 =
(		= >
context		> E
)		E F
{

 	
}


 
} 
} ò
WD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\DrugRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
DrugRepository 
:  !

Repository" ,
<, -
Drug- 1
>1 2
{ 
public		 
DrugRepository		 
(		 
MedHubContext		 +
context		, 3
)		3 4
:		5 6
base		7 ;
(		; <
context		< C
)		C D
{

 	
}


 
} 
} ¥
^D:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\InvoiceItemRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class !
InvoiceItemRepository &
:' (

Repository) 3
<3 4
InvoiceItem4 ?
>? @
{ 
public		 !
InvoiceItemRepository		 $
(		$ %
MedHubContext		% 2
context		3 :
)		: ;
:		< =
base		> B
(		B C
context		C J
)		J K
{

 	
}


 
} 
} §
ZD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\InvoiceRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
InvoiceRepository "
:# $

Repository% /
</ 0
Invoice0 7
>7 8
{ 
public		 
InvoiceRepository		  
(		  !
MedHubContext		! .
context		/ 6
)		6 7
:		8 9
base		: >
(		> ?
context		? F
)		F G
{

 	
}


 
} 
} º
`D:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\MedicalRecordRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class #
MedicalRecordRepository (
:) *

Repository+ 5
<5 6
MedicalRecord6 C
>C D
{ 
public		 #
MedicalRecordRepository		 &
(		& '
MedHubContext		' 4
context		5 <
)		< =
:		> ?
base		@ D
(		D E
context		E L
)		L M
{

 	
}


 
} 
} Ã
dD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\MedicalSpecialityRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class '
MedicalSpecialityRepository ,
:- .

Repository/ 9
<9 :
MedicalSpeciality: K
>K L
{ 
public		 '
MedicalSpecialityRepository		 *
(		* +
MedHubContext		+ 8
context		9 @
)		@ A
:		B C
base		D H
(		H I
context		I P
)		P Q
{

 	
}


 
} 
} §
ZD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\PatientRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
PatientRepository "
:# $

Repository% /
</ 0
Patient0 7
>7 8
{ 
public		 
PatientRepository		  
(		  !
MedHubContext		! .
context		/ 6
)		6 7
:		8 9
base		: >
(		> ?
context		? F
)		F G
{

 	
}


 
} 
} §
ZD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\ProductRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
ProductRepository "
:# $

Repository% /
</ 0
Product0 7
>7 8
{ 
public		 
ProductRepository		  
(		  !
MedHubContext		! .
context		/ 6
)		6 7
:		8 9
base		: >
(		> ?
context		? F
)		F G
{

 	
}


 
} 
} §
ZD:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\ServiceRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
ServiceRepository "
:# $

Repository% /
</ 0
Service0 7
>7 8
{ 
public		 
ServiceRepository		  
(		  !
MedHubContext		! .
context		/ 6
)		6 7
:		8 9
base		: >
(		> ?
context		? F
)		F G
{

 	
}


 
} 
} ¨
\D:\Dev\.NET\ProjectRemakeV2\MedHub\MedHub.Infrastructure\Repositories\StockItemRepository.cs
	namespace 	
MedHub
 
. 
Infrastructure 
.  
Repositories  ,
{ 
public 

class 
StockItemRepository $
:% &

Repository' 1
<1 2
	StockItem2 ;
>; <
{ 
public		 
StockItemRepository		 "
(		" #
MedHubContext		# 0
context		1 8
)		8 9
:		: ;
base		< @
(		@ A
context		A H
)		H I
{

 	
}


 
} 
} 