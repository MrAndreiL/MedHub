@page "/doctorlist"
@using MedHub.UI.Pages.Models;
@inject HttpClient _httpClient

<h3>Doctor Overview</h3>

<p>
    <input type="button"
           class="btn btn-primary"
           value="Add New Doctor"
           onclick="location.href='/adddoctor'" />
</p>

<div>
    @if (doctorList != null)
    {
        <table class="table table-light">
            <thead class="table-primary">
            <th>CNP</th>
            <th>Full Name</th>
            <th>Email</th>
            <th>Phone Number</th>
                @*<th>Specializations</th>*@
                @*<th>Cabinet</th>*@
            <th>Action</th>
            </thead>
            <tbody>
                @foreach (var doctor in doctorList)
                {
                    <tr>
                        <td>@doctor.CNP</td>
                        <td>@doctor.FirstName @doctor.LastName</td>
                        <td>@doctor.Email</td>
                        <td>@doctor.PhoneNumber</td>
                        @*<td>
                @foreach (var specialization in @doctor.Specializations)
                {
                <p>@specialization.SpecializationName</p>
                }
                </td>
                <td>@doctor.Cabinet</td>
                <td>
                <form method="post" asp-page-handler="DoctorCabinet">
                <label for="cabinets"> New Cabinet:</label>
                <input type="hidden" name="doctorId" value="@doctor.Id">
                <select id="cabinets" name="cabinets">
                @foreach (var cabinet in Cabinets)
                {
                <option>
                <p>@cabinet.Id </p>
                <p>@cabinet.Address </p>
                </option>
                }
                </select>
                <input type="submit" value="Submit" >
                </form>
                </td>*@
                        <td>
                            <a href="/editdoctor/@doctor.Id">Edit</a> |
                            <a href="/deletedoctor/@doctor.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@code {
    List<DoctorViewModel> doctorList = new List<DoctorViewModel>();
    protected override async Task OnInitializedAsync()
    {
        var response = await _httpClient.GetAsync("https://localhost:7260/api/v1/Doctors");
        response.EnsureSuccessStatusCode();
        doctorList = await response.Content.ReadFromJsonAsync<List<DoctorViewModel>>();
    }
}